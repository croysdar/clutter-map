name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT for OIDC
  contents: read  # This is required for actions/checkout

env:
  reponame: clutter-map
  codedeployname: cluttermap-deploy
  s3bucket: cluttermap-production-build 
  environment: production

jobs:
  build-on-pr:
    # This happens when the PR is opened, or new changes are added to an open PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v1
      with:
        java-version: '21'
    
    - name: Set environment variables
      run: |
        echo "JWT_SECRET=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "DB_SOURCE_URL=${{ secrets.DB_SOURCE_URL }}" >> $GITHUB_ENV
        echo "GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}" >> $GITHUB_ENV
        echo "GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}" >> $GITHUB_ENV
    
    # This confirms that the application built properly
    - name: Build Application
      run: cd back-end && chmod +x ./gradlew && ./gradlew build --scan
    
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: back-end/build/reports/tests/test

  deploy-on-push:
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout code
      uses: actions/checkout@v2

    # Use OIDC for credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::390403853758:role/GitHub-Workflow-CodeDeploy-Role

    - name: Set up JDK 21
      uses: actions/setup-java@v1
      with:
        java-version: '21'

    - name: Set environment variables
      run: |
        touch .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET_KEY }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_SOURCE_URL=${{ secrets.DB_SOURCE_URL }}" >> .env
        echo "OAUTH_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}" >> .env
        echo "OAUTH_GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}" >> .env

    - name: Build Application
      run: cd back-end && chmod +x ./gradlew && ./gradlew build

    # Deploy build to S3
    - name: Upload to S3
      working-directory: back-end/build/libs
      run: |
        aws s3 sync ./ \ 
        s3://${{ env.s3bucket }}/${{ env.codedeployname }}/${{ env.environment }}/ --delete

    # # Trigger CodeDeploy
    # - name: Deploy to AWS CodeDeploy
    #   run: |
    #     aws deploy create-deployment \
    #     --application-name ${{env.codedeployname}}-${{env.environment}}  \
    #     --deployment-group-name Production-Deployment-Group \
    #     --deployment-config-name CodeDeployDefault.OneAtATime \
    #     --s3-location bucket=${{env.codedeployname}}, key=ClutterMapApp.zip, bundleType=zip